// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
   previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Usuario {
  id        Int      @id @default(autoincrement())
  pid       String   @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  login     String
  nome      String
  email     String
  telefone  String
  senha     String
  cpf       String
  acesso    String   @default("PEAO")

  MaquinasCriadas   Maquina[]
  TarefasCriadas    Tarefa[]
  Equipes           Equipe[]
  SubTarefa         SubTarefa[]
  RespostaSubTarefa RespostaSubTarefa[]
}

model Maquina {
  id            Int          @id @default(autoincrement())
  pid           String       @unique @default(uuid())
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  codigo        String
  nome          String
  descricao     String
  responsavel   Usuario      @relation(references: [id], fields: [responsavelId])
  responsavelId Int
  Tarefa        Tarefa[]
  Submaquinas   Submaquina[]
}

model Submaquina {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  nome      String
  descricao String
  estado    Int         @default(10)
  SubTarefa SubTarefa[]
  Maquina   Maquina     @relation(fields: [maquinaId], references: [id])
  maquinaId Int
}

model Equipe {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  fixa      Boolean   @default(false)
  nome      String?
  usuarios  Usuario[]
  tarefas   Tarefa[]
}

model Tarefa {
  id           Int         @id @default(autoincrement())
  pid          String      @unique @default(uuid())
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  titulo       String
  descricao    String
  estado       String      @default("PENDENTE")
  tipo         String      @default("PREDITIVA")
  criticidade  Int         @default(0)
  finalizadoEm DateTime?
  criador      Usuario     @relation(fields: [criadorId], references: [id])
  criadorId    Int
  maquina      Maquina     @relation(fields: [maquinaId], references: [id])
  maquinaId    Int
  Equipe       Equipe?     @relation(fields: [equipeId], references: [id])
  equipeId     Int?
  SubTarefa    SubTarefa[]
}

model SubTarefa {
  id           Int                 @id @default(autoincrement())
  createdAt    DateTime            @default(now())
  updatedAt    DateTime            @updatedAt
  criticidade  Int                 @default(0)
  titulo       String
  descricao    String
  concluido    Boolean             @default(false)
  subMaquina   Submaquina          @relation(fields: [submaquinaId], references: [id])
  criador      Usuario             @relation(fields: [criadorId], references: [id])
  tarefa       Tarefa              @relation(fields: [tarefaId], references: [id])
  submaquinaId Int
  criadorId    Int
  tarefaId     Int
  respostas    RespostaSubTarefa[]
}

model RespostaSubTarefa {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  titulo    String
  descricao String
  alerta    Boolean   @default(false)
  subTarefa SubTarefa @relation(fields: [subTarefaId], references: [id])
  criador   Usuario   @relation(fields: [usuarioId], references: [id])

  subTarefaId Int
  usuarioId   Int
}
